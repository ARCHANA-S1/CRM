.....ORM Querys......
from django.db import models

class Employees(models.Model):
    name=models.CharField(max_length=100)
    department=models.CharField(max_length=100)
    salary=models.PositiveIntegerField()
    email=models.EmailField(unique=True)
    age=models.PositiveIntegerField()
    contact=models.CharField(max_length=12,null=True)

......orm query for creating a new object:.....
>qs=Employees.objects.create(name="hari",department="hr",salary=56000,email="hariks@gmail.com",age=30,contact="test")
......orm query for fetching all records.....
>qs=Employees.objects.all()
>qs then ENTERKEY(to display the output)
......orm query for fetching a specific employee details....
>qs=Employees.objects.get(id=1)
.........orm query for filtering employee records......
>qs=Employees.objects.filter(department="hr")
>qs=Employees.objects.filter(salary__gte=55000)
>qs=Employees.objects.filter(salary__lte=55000)
__gte >=
__lte <=
__gt >
__lt <
.....exclude an object...
>qs=Employees.objects.exclude(department="hr")
.....to update details of an object....
qs=Employees.objects.filter(id=2).update(contact="new contact",age=38)
...to delete details of an object....
qs=Employees.objects.filter(id=1).delete()
...to sort employees with Ascending order of their salary.....
qs=Employees.objects.all().order_by("salary")
...to sort employees with descending order of their salary....
qs=Employees.objects.all().order_by("-salary")

step in emp_list.html;it is edited by another step not not needed 
    <!-- {{data}} -->
    {%for emp in data%}
    <div>
        name={{emp.name}}
        dept={{emp.department}}
        salary={{emp.salary}}
        mail={{emp.email}}
        age={{emp.age}}
        contact={{emp.contact}}
    </div>
    {%endfor%}